/**
 * Geins Management API
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * A stock value for a product item
 **/
@ApiModel(description = "A stock value for a product item")
public class ProductModelsReadProductItemStock {
  
  @SerializedName("ItemId")
  private Integer itemId = null;
  @SerializedName("Stock")
  private Integer stock = null;
  @SerializedName("StockOversellable")
  private Integer stockOversellable = null;
  @SerializedName("StockStatic")
  private Integer stockStatic = null;
  @SerializedName("StockSellable")
  private Integer stockSellable = null;

  /**
   * A value to uniquely identity a single product item.
   **/
  @ApiModelProperty(value = "A value to uniquely identity a single product item.")
  public Integer getItemId() {
    return itemId;
  }
  public void setItemId(Integer itemId) {
    this.itemId = itemId;
  }

  /**
   * The physical stock value.
   **/
  @ApiModelProperty(value = "The physical stock value.")
  public Integer getStock() {
    return stock;
  }
  public void setStock(Integer stock) {
    this.stock = stock;
  }

  /**
   * The oversellable stock value.
   **/
  @ApiModelProperty(value = "The oversellable stock value.")
  public Integer getStockOversellable() {
    return stockOversellable;
  }
  public void setStockOversellable(Integer stockOversellable) {
    this.stockOversellable = stockOversellable;
  }

  /**
   * The static stock value.
   **/
  @ApiModelProperty(value = "The static stock value.")
  public Integer getStockStatic() {
    return stockStatic;
  }
  public void setStockStatic(Integer stockStatic) {
    this.stockStatic = stockStatic;
  }

  /**
   * The sellable stock value.
   **/
  @ApiModelProperty(value = "The sellable stock value.")
  public Integer getStockSellable() {
    return stockSellable;
  }
  public void setStockSellable(Integer stockSellable) {
    this.stockSellable = stockSellable;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductModelsReadProductItemStock productModelsReadProductItemStock = (ProductModelsReadProductItemStock) o;
    return (this.itemId == null ? productModelsReadProductItemStock.itemId == null : this.itemId.equals(productModelsReadProductItemStock.itemId)) &&
        (this.stock == null ? productModelsReadProductItemStock.stock == null : this.stock.equals(productModelsReadProductItemStock.stock)) &&
        (this.stockOversellable == null ? productModelsReadProductItemStock.stockOversellable == null : this.stockOversellable.equals(productModelsReadProductItemStock.stockOversellable)) &&
        (this.stockStatic == null ? productModelsReadProductItemStock.stockStatic == null : this.stockStatic.equals(productModelsReadProductItemStock.stockStatic)) &&
        (this.stockSellable == null ? productModelsReadProductItemStock.stockSellable == null : this.stockSellable.equals(productModelsReadProductItemStock.stockSellable));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.itemId == null ? 0: this.itemId.hashCode());
    result = 31 * result + (this.stock == null ? 0: this.stock.hashCode());
    result = 31 * result + (this.stockOversellable == null ? 0: this.stockOversellable.hashCode());
    result = 31 * result + (this.stockStatic == null ? 0: this.stockStatic.hashCode());
    result = 31 * result + (this.stockSellable == null ? 0: this.stockSellable.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductModelsReadProductItemStock {\n");
    
    sb.append("  itemId: ").append(itemId).append("\n");
    sb.append("  stock: ").append(stock).append("\n");
    sb.append("  stockOversellable: ").append(stockOversellable).append("\n");
    sb.append("  stockStatic: ").append(stockStatic).append("\n");
    sb.append("  stockSellable: ").append(stockSellable).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
