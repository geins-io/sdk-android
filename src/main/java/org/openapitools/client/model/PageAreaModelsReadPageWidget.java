/**
 * Geins Management API
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.UUID;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The API-representation of page widgets
 **/
@ApiModel(description = "The API-representation of page widgets")
public class PageAreaModelsReadPageWidget {
  
  @SerializedName("Id")
  private UUID id = null;
  @SerializedName("Name")
  private String name = null;
  @SerializedName("Type")
  private String type = null;
  @SerializedName("Active")
  private Boolean active = null;
  @SerializedName("ClassNames")
  private List<String> classNames = null;
  @SerializedName("Size")
  private String size = null;
  @SerializedName("Configuration")
  private String configuration = null;

  /**
   * The IDs of widgets are immutable (determined by each view model implementation, in the namespace Carismar.Core)
   **/
  @ApiModelProperty(value = "The IDs of widgets are immutable (determined by each view model implementation, in the namespace Carismar.Core)")
  public UUID getId() {
    return id;
  }
  public void setId(UUID id) {
    this.id = id;
  }

  /**
   * The static name of this widget. Used to translate into icons, or to append to css-classes.
   **/
  @ApiModelProperty(value = "The static name of this widget. Used to translate into icons, or to append to css-classes.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The name of the widget-type
   **/
  @ApiModelProperty(value = "The name of the widget-type")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * Decides if this {PageArea.Models.Read.PageWidget} is active or not
   **/
  @ApiModelProperty(value = "Decides if this {PageArea.Models.Read.PageWidget} is active or not")
  public Boolean getActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }

  /**
   * Holds all CSS Class names that this widget should render
   **/
  @ApiModelProperty(value = "Holds all CSS Class names that this widget should render")
  public List<String> getClassNames() {
    return classNames;
  }
  public void setClassNames(List<String> classNames) {
    this.classNames = classNames;
  }

  /**
   * The fractional size for this widget in it's container.
   **/
  @ApiModelProperty(value = "The fractional size for this widget in it's container.")
  public String getSize() {
    return size;
  }
  public void setSize(String size) {
    this.size = size;
  }

  /**
   * The configuration for this {PageArea.Models.Read.PageWidget}
   **/
  @ApiModelProperty(value = "The configuration for this {PageArea.Models.Read.PageWidget}")
  public String getConfiguration() {
    return configuration;
  }
  public void setConfiguration(String configuration) {
    this.configuration = configuration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageAreaModelsReadPageWidget pageAreaModelsReadPageWidget = (PageAreaModelsReadPageWidget) o;
    return (this.id == null ? pageAreaModelsReadPageWidget.id == null : this.id.equals(pageAreaModelsReadPageWidget.id)) &&
        (this.name == null ? pageAreaModelsReadPageWidget.name == null : this.name.equals(pageAreaModelsReadPageWidget.name)) &&
        (this.type == null ? pageAreaModelsReadPageWidget.type == null : this.type.equals(pageAreaModelsReadPageWidget.type)) &&
        (this.active == null ? pageAreaModelsReadPageWidget.active == null : this.active.equals(pageAreaModelsReadPageWidget.active)) &&
        (this.classNames == null ? pageAreaModelsReadPageWidget.classNames == null : this.classNames.equals(pageAreaModelsReadPageWidget.classNames)) &&
        (this.size == null ? pageAreaModelsReadPageWidget.size == null : this.size.equals(pageAreaModelsReadPageWidget.size)) &&
        (this.configuration == null ? pageAreaModelsReadPageWidget.configuration == null : this.configuration.equals(pageAreaModelsReadPageWidget.configuration));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.active == null ? 0: this.active.hashCode());
    result = 31 * result + (this.classNames == null ? 0: this.classNames.hashCode());
    result = 31 * result + (this.size == null ? 0: this.size.hashCode());
    result = 31 * result + (this.configuration == null ? 0: this.configuration.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageAreaModelsReadPageWidget {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  active: ").append(active).append("\n");
    sb.append("  classNames: ").append(classNames).append("\n");
    sb.append("  size: ").append(size).append("\n");
    sb.append("  configuration: ").append(configuration).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
