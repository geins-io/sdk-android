/**
 * Geins Management API
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.UUID;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Contains pagination information for paged operations, i.e. PageSize and PageCount.
 **/
@ApiModel(description = "Contains pagination information for paged operations, i.e. PageSize and PageCount.")
public class PageResult {
  
  @SerializedName("BatchId")
  private UUID batchId = null;
  @SerializedName("Page")
  private Integer page = null;
  @SerializedName("RowCount")
  private Integer rowCount = null;
  @SerializedName("PageCount")
  private Integer pageCount = null;
  @SerializedName("PageSize")
  private Integer pageSize = null;
  @SerializedName("HasMoreRows")
  private Boolean hasMoreRows = null;

  /**
   * The id of the batch operation. If this property has a value for the first fetched page it has to be passed as a parameter for all subsequent requests-
   **/
  @ApiModelProperty(value = "The id of the batch operation. If this property has a value for the first fetched page it has to be passed as a parameter for all subsequent requests-")
  public UUID getBatchId() {
    return batchId;
  }
  public void setBatchId(UUID batchId) {
    this.batchId = batchId;
  }

  /**
   * The current page
   **/
  @ApiModelProperty(value = "The current page")
  public Integer getPage() {
    return page;
  }
  public void setPage(Integer page) {
    this.page = page;
  }

  /**
   * Total number of rows
   **/
  @ApiModelProperty(value = "Total number of rows")
  public Integer getRowCount() {
    return rowCount;
  }
  public void setRowCount(Integer rowCount) {
    this.rowCount = rowCount;
  }

  /**
   * Total number of pages
   **/
  @ApiModelProperty(value = "Total number of pages")
  public Integer getPageCount() {
    return pageCount;
  }
  public void setPageCount(Integer pageCount) {
    this.pageCount = pageCount;
  }

  /**
   * Page size
   **/
  @ApiModelProperty(value = "Page size")
  public Integer getPageSize() {
    return pageSize;
  }
  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  /**
   * True if there is more content to fetch.
   **/
  @ApiModelProperty(value = "True if there is more content to fetch.")
  public Boolean getHasMoreRows() {
    return hasMoreRows;
  }
  public void setHasMoreRows(Boolean hasMoreRows) {
    this.hasMoreRows = hasMoreRows;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageResult pageResult = (PageResult) o;
    return (this.batchId == null ? pageResult.batchId == null : this.batchId.equals(pageResult.batchId)) &&
        (this.page == null ? pageResult.page == null : this.page.equals(pageResult.page)) &&
        (this.rowCount == null ? pageResult.rowCount == null : this.rowCount.equals(pageResult.rowCount)) &&
        (this.pageCount == null ? pageResult.pageCount == null : this.pageCount.equals(pageResult.pageCount)) &&
        (this.pageSize == null ? pageResult.pageSize == null : this.pageSize.equals(pageResult.pageSize)) &&
        (this.hasMoreRows == null ? pageResult.hasMoreRows == null : this.hasMoreRows.equals(pageResult.hasMoreRows));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.batchId == null ? 0: this.batchId.hashCode());
    result = 31 * result + (this.page == null ? 0: this.page.hashCode());
    result = 31 * result + (this.rowCount == null ? 0: this.rowCount.hashCode());
    result = 31 * result + (this.pageCount == null ? 0: this.pageCount.hashCode());
    result = 31 * result + (this.pageSize == null ? 0: this.pageSize.hashCode());
    result = 31 * result + (this.hasMoreRows == null ? 0: this.hasMoreRows.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageResult {\n");
    
    sb.append("  batchId: ").append(batchId).append("\n");
    sb.append("  page: ").append(page).append("\n");
    sb.append("  rowCount: ").append(rowCount).append("\n");
    sb.append("  pageCount: ").append(pageCount).append("\n");
    sb.append("  pageSize: ").append(pageSize).append("\n");
    sb.append("  hasMoreRows: ").append(hasMoreRows).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
