/**
 * Geins Management API
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Data carrier for a payment detail
 **/
@ApiModel(description = "Data carrier for a payment detail")
public class OrderModelsPaymentDetail {
  
  @SerializedName("Id")
  private Integer id = null;
  @SerializedName("PaymentId")
  private Integer paymentId = null;
  @SerializedName("Name")
  private String name = null;
  @SerializedName("DisplayName")
  private String displayName = null;
  @SerializedName("TransactionId")
  private String transactionId = null;
  @SerializedName("SecondaryTransactionId")
  private String secondaryTransactionId = null;
  @SerializedName("ReservationNumber")
  private String reservationNumber = null;
  @SerializedName("ReservationDate")
  private Date reservationDate = null;
  @SerializedName("PaymentDate")
  private Date paymentDate = null;
  @SerializedName("Total")
  private Double total = null;
  @SerializedName("Payed")
  private Boolean payed = null;
  @SerializedName("PaymentFee")
  private Double paymentFee = null;
  @SerializedName("ShippingFee")
  private Double shippingFee = null;
  @SerializedName("PaymentOption")
  private String paymentOption = null;

  /**
   * Unique identifier for this payment detail. Exception: For some payment options this field can be 0. These orders only have one payment detail.
   **/
  @ApiModelProperty(value = "Unique identifier for this payment detail. Exception: For some payment options this field can be 0. These orders only have one payment detail.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Payment method id
   **/
  @ApiModelProperty(value = "Payment method id")
  public Integer getPaymentId() {
    return paymentId;
  }
  public void setPaymentId(Integer paymentId) {
    this.paymentId = paymentId;
  }

  /**
   * The name of the payment method
   **/
  @ApiModelProperty(value = "The name of the payment method")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The display name of the payment method
   **/
  @ApiModelProperty(value = "The display name of the payment method")
  public String getDisplayName() {
    return displayName;
  }
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  /**
   * The transaction id (external reference).
   **/
  @ApiModelProperty(value = "The transaction id (external reference).")
  public String getTransactionId() {
    return transactionId;
  }
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  /**
   * The secondary transaction id, if any (external reference).
   **/
  @ApiModelProperty(value = "The secondary transaction id, if any (external reference).")
  public String getSecondaryTransactionId() {
    return secondaryTransactionId;
  }
  public void setSecondaryTransactionId(String secondaryTransactionId) {
    this.secondaryTransactionId = secondaryTransactionId;
  }

  /**
   * The reservation number. This field is not available for all payment methods.
   **/
  @ApiModelProperty(value = "The reservation number. This field is not available for all payment methods.")
  public String getReservationNumber() {
    return reservationNumber;
  }
  public void setReservationNumber(String reservationNumber) {
    this.reservationNumber = reservationNumber;
  }

  /**
   * Reservation date
   **/
  @ApiModelProperty(value = "Reservation date")
  public Date getReservationDate() {
    return reservationDate;
  }
  public void setReservationDate(Date reservationDate) {
    this.reservationDate = reservationDate;
  }

  /**
   * Payment date
   **/
  @ApiModelProperty(value = "Payment date")
  public Date getPaymentDate() {
    return paymentDate;
  }
  public void setPaymentDate(Date paymentDate) {
    this.paymentDate = paymentDate;
  }

  /**
   * Total
   **/
  @ApiModelProperty(value = "Total")
  public Double getTotal() {
    return total;
  }
  public void setTotal(Double total) {
    this.total = total;
  }

  /**
   * Shows if the order is paid using this payment method
   **/
  @ApiModelProperty(value = "Shows if the order is paid using this payment method")
  public Boolean getPayed() {
    return payed;
  }
  public void setPayed(Boolean payed) {
    this.payed = payed;
  }

  /**
   * The payment fee
   **/
  @ApiModelProperty(value = "The payment fee")
  public Double getPaymentFee() {
    return paymentFee;
  }
  public void setPaymentFee(Double paymentFee) {
    this.paymentFee = paymentFee;
  }

  /**
   * The shipping fee
   **/
  @ApiModelProperty(value = "The shipping fee")
  public Double getShippingFee() {
    return shippingFee;
  }
  public void setShippingFee(Double shippingFee) {
    this.shippingFee = shippingFee;
  }

  /**
   * The name of the payment option, if any.  This doesn't have to be the same as the payment name. Eg \"Direct bank payment\", \"Card\", \"Invoice\" etc.
   **/
  @ApiModelProperty(value = "The name of the payment option, if any.  This doesn't have to be the same as the payment name. Eg \"Direct bank payment\", \"Card\", \"Invoice\" etc.")
  public String getPaymentOption() {
    return paymentOption;
  }
  public void setPaymentOption(String paymentOption) {
    this.paymentOption = paymentOption;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderModelsPaymentDetail orderModelsPaymentDetail = (OrderModelsPaymentDetail) o;
    return (this.id == null ? orderModelsPaymentDetail.id == null : this.id.equals(orderModelsPaymentDetail.id)) &&
        (this.paymentId == null ? orderModelsPaymentDetail.paymentId == null : this.paymentId.equals(orderModelsPaymentDetail.paymentId)) &&
        (this.name == null ? orderModelsPaymentDetail.name == null : this.name.equals(orderModelsPaymentDetail.name)) &&
        (this.displayName == null ? orderModelsPaymentDetail.displayName == null : this.displayName.equals(orderModelsPaymentDetail.displayName)) &&
        (this.transactionId == null ? orderModelsPaymentDetail.transactionId == null : this.transactionId.equals(orderModelsPaymentDetail.transactionId)) &&
        (this.secondaryTransactionId == null ? orderModelsPaymentDetail.secondaryTransactionId == null : this.secondaryTransactionId.equals(orderModelsPaymentDetail.secondaryTransactionId)) &&
        (this.reservationNumber == null ? orderModelsPaymentDetail.reservationNumber == null : this.reservationNumber.equals(orderModelsPaymentDetail.reservationNumber)) &&
        (this.reservationDate == null ? orderModelsPaymentDetail.reservationDate == null : this.reservationDate.equals(orderModelsPaymentDetail.reservationDate)) &&
        (this.paymentDate == null ? orderModelsPaymentDetail.paymentDate == null : this.paymentDate.equals(orderModelsPaymentDetail.paymentDate)) &&
        (this.total == null ? orderModelsPaymentDetail.total == null : this.total.equals(orderModelsPaymentDetail.total)) &&
        (this.payed == null ? orderModelsPaymentDetail.payed == null : this.payed.equals(orderModelsPaymentDetail.payed)) &&
        (this.paymentFee == null ? orderModelsPaymentDetail.paymentFee == null : this.paymentFee.equals(orderModelsPaymentDetail.paymentFee)) &&
        (this.shippingFee == null ? orderModelsPaymentDetail.shippingFee == null : this.shippingFee.equals(orderModelsPaymentDetail.shippingFee)) &&
        (this.paymentOption == null ? orderModelsPaymentDetail.paymentOption == null : this.paymentOption.equals(orderModelsPaymentDetail.paymentOption));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.paymentId == null ? 0: this.paymentId.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.displayName == null ? 0: this.displayName.hashCode());
    result = 31 * result + (this.transactionId == null ? 0: this.transactionId.hashCode());
    result = 31 * result + (this.secondaryTransactionId == null ? 0: this.secondaryTransactionId.hashCode());
    result = 31 * result + (this.reservationNumber == null ? 0: this.reservationNumber.hashCode());
    result = 31 * result + (this.reservationDate == null ? 0: this.reservationDate.hashCode());
    result = 31 * result + (this.paymentDate == null ? 0: this.paymentDate.hashCode());
    result = 31 * result + (this.total == null ? 0: this.total.hashCode());
    result = 31 * result + (this.payed == null ? 0: this.payed.hashCode());
    result = 31 * result + (this.paymentFee == null ? 0: this.paymentFee.hashCode());
    result = 31 * result + (this.shippingFee == null ? 0: this.shippingFee.hashCode());
    result = 31 * result + (this.paymentOption == null ? 0: this.paymentOption.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderModelsPaymentDetail {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  paymentId: ").append(paymentId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  displayName: ").append(displayName).append("\n");
    sb.append("  transactionId: ").append(transactionId).append("\n");
    sb.append("  secondaryTransactionId: ").append(secondaryTransactionId).append("\n");
    sb.append("  reservationNumber: ").append(reservationNumber).append("\n");
    sb.append("  reservationDate: ").append(reservationDate).append("\n");
    sb.append("  paymentDate: ").append(paymentDate).append("\n");
    sb.append("  total: ").append(total).append("\n");
    sb.append("  payed: ").append(payed).append("\n");
    sb.append("  paymentFee: ").append(paymentFee).append("\n");
    sb.append("  shippingFee: ").append(shippingFee).append("\n");
    sb.append("  paymentOption: ").append(paymentOption).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
